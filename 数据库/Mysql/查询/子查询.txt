子查询概念：子查询指一个查询语句嵌套在另一个查询语句内部的查询
在特定情况下，一个查询语句的条件需要另一个查询语句来获取，内层查询语句的查询结果可以为外层查询语句提供
查询条件。
SELECT * FROM emp WHERE sal = （SELECT MIN（sal）FROM emp）;

子查询规范：
1.子查询必须放在小括号里
2.子查询一般放在比较操作符的右边
3.子查询可以出现在几乎所有的SELECT语句中（如：select、from、where，order by、having等）
按子查询返回的结果分类
标量查询：返回一个标量（一个值）单行单列
行子查询：返回的结果是单行多列
列子查询：返回的结果是多行单列
表子查询：返回的是一个表
按子查询和主查询之间是否有条件关联分类
相关子查询：两个查询之间有一定的条件关联（相互联系）
不相关子查询：两个查询之间没有条件关联（项目独立）

建议：
子查询出现在where子句中：此时子查询返回的结果一般是单行单列，单行多列，多行单列
子查询出现在having子句中：此时子查询返回的结果一般是单行单列数据，同时为了使用统计函数操作

列子查询（多行子查询）
子查询返回的是多行单列数据，就是一列数据。多行子查询也称为集合比较子查询
子查询出现在from子句中：此时子查询返回的结果图一般是多行多列，可以按照一张数据表（临时表）的形式操作
在使用多行子查询时需要使用多行比较操作符：
操作符	含义
IN		等于列表中的任意一个
ANY		需要和单行比较操作符一起使用（>,<,=,<>.....）,与子查询结果中任何一个值比较，一个成立
ALL		需要和单行比较操作符一起使用（>,<,=,<>.....）,和子查询返回的所有值比较，同时成立
SOME		实际上是ANY的别名，作用相同，一般用ANY

IN操作符
IN运算符用来判断表达式的值是否位于给出的列表中；如果是，返回值为1，否则返回值为0；
NOT IN的作用于IN恰好相反，NOT IN 用来判断表达式的值是否不存在于给出的列表中；如果不是，返回值
为1，否则返回值为0。

总结：
IN 判断在集合内
=ANY 判断在集合内（与IN相同）
>ANY大于集合中最小的
<ANY小于集合中最大的
<>ANY 与集合中任意一个
=ALL 与集合中每个值都相等
>ALL 比集合中最大的值大
<ALL 比集合中最小的值小
<>ALL 与集合所有值不相等


表子查询（要给副表起别名）