一、正则表达式（是用于描述一组字符串特征的模式，用来匹配特定的字符串，通过特殊字符+普通字符来进行模式描述，从而达到文本匹配目的工具）
	用于各种文本编辑器、文本处理工具当中
二、应用场景：
	（1）验证：表单提交，进行用户名密码的验证
	（2）查找：从大量信息中快速提取指定内容，在一批url中找到指定url
	（3）替换：将指定格式的文本进行正则匹配查找，找到之后进行特定替换
三、基本要素
	（1）字符类
	（2）数量限定符
	（3）位置限定符
	（4）特殊符号
	注意：正则表达式基本是与语言无关的，我们可以结合语言/工具与正则表达式进行文本处理
四、需要包含#include<regex>头文件
	regex_match( "字符串"，regex("正则表达式"))//正则匹配
	regex_search()//正则查找
五、cmatch    cm;//当字符串位置是const char*
       smatch    sm;//当字符串位置是string 
          if(regex_search（("make I'm maye"),cm,regex("\\b[a-z]*[^ ]")))//make……这是const char*类型用cm
	{
		//\\b查找符合条件的单词(从头开始找)
		cout<<cm.size()<<endl;
		for(size_t   i=0;i<cm.size();i++)
		{
			cout<<cm[i]<<" ";
		}
		cout<<endl;
		cout<<"suffix"<<cm.suffix( )<<endl;
	}